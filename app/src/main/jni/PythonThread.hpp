/* DO NOT EDIT THIS FILE - it is machine generated */

#include <jni.h>
#include <string>

#pragma once
using namespace std;
#ifdef __cplusplus
extern "C" {
#endif
JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *jvm, void *reserved);
/*
 * Class:     com_example_testedit_PythonThread
 * Method:    initPython
 * Signature: ()I
 */
JNIEXPORT void JNICALL Java_com_example_testedit_PythonThread_returnInfoPython
        (JNIEnv *env, jobject obj);
JNIEXPORT jint JNICALL Java_com_example_testedit_PythonThread_initPython
        (JNIEnv *, jobject, jstring aPath);

/*
 * Class:     com_example_testedit_PythonThread
 * Method:    cleanupPython
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_example_testedit_PythonThread_cleanupPython
        (JNIEnv *, jobject);

/*
 * Class:     com_example_testedit_PythonThread
 * Method:    runPython
 * Signature: ()I
 */

class JNI_obj {


public:
    jobject obj;
    JNIEnv *env;
public:
    JNI_obj() {

    };
public:
    JNI_obj(JNIEnv *env, jobject obj) {
        this->env = env;
        this->obj = obj;
    };

};
class PyLogs {
public:
    void LOG(string message);
};

JNIEXPORT jint JNICALL Java_com_example_testedit_PythonThread_runPython
        (JNIEnv *, jobject, jstring filename);

JNIEXPORT void JNICALL returnPython(JNIEnv *env, jobject obj, string message);
JNIEXPORT jboolean JNICALL
Java_com_example_testedit_PythonThread_getStatusPy(JNIEnv *env, jobject thiz);
JNIEXPORT jboolean JNICALL
Java_com_example_testedit_PythonThread_getStatusResult(JNIEnv *env, jobject thiz);
JNIEXPORT jboolean JNICALL
Java_com_example_testedit_PythonThread_getStatusError(JNIEnv *env, jobject thiz);
JNIEXPORT jboolean JNICALL
Java_com_example_testedit_PythonThread_getStatusErrorResult(JNIEnv *env, jobject thiz);
JNIEXPORT jstring JNICALL
Java_com_example_testedit_PythonThread_getResult(JNIEnv *env, jobject thiz) ;
JNIEXPORT jstring JNICALL
Java_com_example_testedit_PythonThread_getError(JNIEnv *env, jobject thiz);
#ifdef __cplusplus
}

#endif


